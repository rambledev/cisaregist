generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  email     String    @unique
  name      String
  role      String    @default("admin")
  createdAt DateTime  @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")
  isActive  Boolean   @default(true) @map("is_active")
  lastLogin DateTime? @map("last_login") @db.Timestamp(6)

  @@map("cisa_admins")
}

model Faculty {
  id          String       @id @default(cuid())
  name        String       @unique
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  departments Department[]

  @@map("cisa_faculties")
}

model Department {
  id              String   @id @default(cuid())
  facultyId       String   @map("faculty_id")
  code            String   @unique
  name            String
  degree          String
  duration        String?
  specializations String[]
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  faculty         Faculty  @relation(fields: [facultyId], references: [id], onDelete: Cascade)

  @@map("cisa_departments")
}

model Registration {
  id                     String   @id @default(cuid())
  sequence               Int      @unique @default(autoincrement())
  firstNameTh            String
  lastNameTh             String
  firstNameEn            String
  lastNameEn             String
  prefix                 String
  nationalId             String   @unique
  email                  String   @unique
  phoneNumber            String
  faculty                String
  department             String?  // üëà ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô optional ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å
  academicPosition       String
  administrativePosition String?
  status                 String   @default("inactive")
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  role                   String
  consentDate            DateTime @default(now())
  consentGiven           Boolean  @default(true)
  consentVersion         String   @default("1.0")
  role2                  String?

  @@map("cisa_registrations")
}

model AccessLog {
  id         String   @id @default(cuid())
  adminId    String?  @map("admin_id")
  adminEmail String?  @map("admin_email")
  action     String
  targetId   String?  @map("target_id")
  reason     String?
  ipAddress  String?  @map("ip_address")
  userAgent  String?  @map("user_agent")
  timestamp  DateTime @default(now())

  @@index([adminId])
  @@index([action])
  @@index([timestamp])
  @@map("cisa_access_logs")
}
